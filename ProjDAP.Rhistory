shopping_trends <- read.csv("C:/Users/ibrah/Downloads/archive (6)/shopping_trends.csv")
View(shopping_trends)
shopping_trends
str(shopping_trends)
library(rpart)
model<- rpart(shopping_trends$Season ~ shopping_trends$Item.Purchased + shopping_trends$Color, data = training_data)
model<- rpart(shopping_trends$Season ~ shopping_trends$Item.Purchased + shopping_trends$Color, data = shopping_trends)
predictions <- predict(model, newdata = testing_data, type = "class")
predictions <- predict(model, newdata = testing_data, type = "class")
n<-round(nrow(shopping_trends)*0.75);n
set.seed(12);samp=sample(1:nrow(shopping_trends),n)
training_data=shopping_trends[samp,]
testing_data=shopping_trends[-samp,]
model<- rpart(shopping_trends$Season ~ shopping_trends$Item.Purchased + shopping_trends$Color, data = training_data)
model
predictions <- predict(model, newdata = testing_data, type = "class")
confusion_matrix <- table(predictions, testing_data$Season)
predictions
new_data <- data.frame(Item = "Jeans", Color = "Maroon")
predicted_season <- predict(model, newdata = new_data, type = "class")
predicted_season
import * as tf from '@tensorflow/tfjs';
library(ggplot2)
ggplot(shopping_data, aes(x = Season)) +
geom_bar(fill = "skyblue") +
labs(title = "Distribution of Purchases Across Seasons")
library(ggplot2)
ggplot(shopping_data, aes(x = shopping_trends$Season)) +
geom_bar(fill = "skyblue") +
labs(title = "Distribution of Purchases Across Seasons")
library(ggplot2)
ggplot(shopping_trends, aes(x = shopping_trends$Season)) +
geom_bar(fill = "skyblue") +
labs(title = "Distribution of Purchases Across Seasons")
ggplot(shopping_trends, aes(x = shopping_trends$Item.Purchased)) +
geom_bar(fill = "lightgreen") +
labs(title = "Distribution of Purchases Across Items") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
feats<-names(shopping_trends[,2:9])
f<-paste(feats,collapse=’+’):f
f<-paste(feats,collapse=’+’),f
f<-paste(feats,collapse=’+’);f
library(neuralnet)
install.packages("neuralbet")
library(neuralnet)
install_packages("installr")
updateR()
library(readxl)
ProjDAP <- read_excel("C:/Kuliah/CCIT/Semester 3/DAP/ProjDAP.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
View(ProjDAP)
data2 <- ProjDAP
n<-round(nrow(data2)*0.75);n
set.seed(12);samp=sample(1:nrow(data2),n)
training_data <- data2[samp, ]
testing_data <- data2[-samp, ]
feats <- names(data2[,1:6])
f<-paste(feats,collapse='+');f
f1<-paste('Season ~',f);f1
f2<-as.formula(f1);f2
library(neuralnet)
nn<-neuralnet(f2,training_data,hidden=3)
plot(nn)
nn<-neuralnet(f2,training_data,hidden=2)
nn<-neuralnet(f2,training_data,hidden=4)
feats <- names(data2[,1:7])
f<-paste(feats,collapse='+');f
f1<-paste('Season ~',f);f1
f2<-as.formula(f1);f2
nn<-neuralnet(f2,training_data,hidden=3)
plot(nn)
index_train <- sample(1:nrow(data2), 0.7 * nrow(data2))
train_data <- data2[index_train, ]
test_data <- data2[-index_train, ]
pred <- predict(nn, test_data)
pred_class <- ifelse(pred > 0.5, 1, 0)
conf_matrix <- table(pred_class, test_data$Season)
conf_matrix
accuracy_nn <- sum(diag(conf_matrix)) / sum(conf_matrix)
accuracy_nn
savehistory("~/projekDAP/ProjDAP.Rhistory")
